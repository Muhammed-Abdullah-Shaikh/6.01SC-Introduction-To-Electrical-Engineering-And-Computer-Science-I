Search.setIndex({"docnames": ["index", "unit1/designLab01Work", "unit1/index", "unit1/swLab02Work", "unit2/index", "unit2/lec03", "unit2/lec04", "unit2/lec05", "unit2/lec06"], "filenames": ["index.rst", "unit1/designLab01Work.rst", "unit1/index.md", "unit1/swLab02Work.rst", "unit2/index.md", "unit2/lec03.md", "unit2/lec04.md", "unit2/lec05.md", "unit2/lec06.md"], "titles": ["Welcome to MIT 6.01SC Introduction To Electrical Engineering And Computer Science I Solutions!", "Source code for designLab01Work", "Unit 1: Software Engineering", "Source code for swLab02Work", "Unit 2 Signal and Systems", "Unit 2: Signals and Systems", "Unit 2: Signals and Systems", "Unit 2: Signals and Systems", "Unit 2: Signals and Systems"], "terms": {"unit": 0, "1": [0, 1, 3], "softwar": 0, "lectur": 0, "oop": 0, "2": [0, 1, 3], "state": [0, 3, 5], "machin": [0, 5], "signal": 0, "system": [0, 2], "lti": [0, 4], "character": [0, 4], "perform": [0, 2, 4, 5], "design": [0, 4], "control": [0, 4, 5], "index": [0, 2], "modul": [0, 2], "search": 0, "page": [0, 2, 5, 6, 7, 8], "def": [1, 3], "fib": 1, "n": [1, 2, 3], "0": [1, 2, 3, 5], "return": [1, 2, 3, 5], "elif": 1, "els": [1, 2], "class": [1, 2, 3, 5], "v2": 1, "__init__": [1, 3], "self": [1, 2, 3], "x": [1, 3], "y": 1, "__str__": 1, "f": [1, 3], "getx": 1, "geti": 1, "__add__": 1, "other": [1, 2], "__mul__": 1, "isinst": 1, "polynomi": 1, "coeffici": 1, "coeff": 1, "order": 1, "len": 1, "i": [1, 2, 3, 6, 7, 8], "add": [1, 2], "diff": [1, 2], "b": [1, 2], "zip": 1, "mul": 1, "temp_poli": 1, "c1": 1, "val": [1, 2], "result": [1, 2], "enumer": [1, 2], "revers": 1, "root": 1, "none": [1, 2, 3], "c": [1, 2, 3, 5], "d2": 1, "4": [1, 2, 3, 5], "d": 1, "complex": [1, 2], "5": [1, 2, 3], "too": 1, "high": 1, "solv": 1, "out": [1, 3], "str": [1, 2], "start": [1, 2, 3, 5], "__call__": 1, "__repr__": 1, "must": 2, "see": [2, 5], "thi": [2, 3, 5], "chapter": [2, 5], "3": [2, 3], "cours": [2, 5], "overview": 2, "pdf": [2, 5], "learn": 2, "program": 2, "python": 2, "data": 2, "6mb": 2, "human": 2, "deal": 2, "exploit": 2, "power": 2, "abstract": [2, 5], "modular": 2, "idea": 2, "build": 2, "compon": 2, "can": [2, 3], "re": 2, "us": [2, 5], "after": 2, "construct": 2, "circuit": 2, "gear": 2, "most": 2, "detail": 2, "ignor": 2, "simpler": 2, "descript": 2, "interact": 2, "lack": 2, "make": [2, 5], "veri": 2, "difficult": 2, "larg": 2, "becaus": 2, "two": [2, 5], "differ": [2, 5], "peopl": 2, "same": [2, 5], "person": 2, "time": [2, 5], "cannot": 2, "piec": 2, "put": 2, "them": 2, "togeth": 2, "without": 2, "understand": 2, "whole": 2, "kei": 2, "point": [2, 5], "good": 2, "preserv": 2, "barrier": 2, "between": [2, 5], "intern": 2, "how": 2, "thei": 2, "ar": [2, 3], "think": 2, "transduc": [2, 3], "process": 2, "box": 2, "run": 2, "continu": 2, "In": 2, "context": 2, "our": 2, "pcap": 2, "framework": 2, "orient": [2, 5], "give": 2, "u": [2, 3], "method": [2, 5], "captur": 2, "common": 2, "pattern": [2, 5], "procedur": 2, "oper": [2, 5], "via": 2, "gener": [2, 5], "function": [2, 5], "inherit": 2, "sourc": [2, 5], "code": [2, 5], "model": 2, "whose": 2, "output": [2, 3, 5], "depend": 2, "entir": 2, "histori": 2, "input": [2, 3, 5], "just": 2, "recent": 2, "either": 2, "discret": 2, "we": [2, 5], "job": 2, "an": [2, 5], "embed": 2, "transduct": 2, "from": 2, "stream": 2, "infinit": 2, "sequenc": 2, "valu": [2, 3, 5], "primit": 2, "specifi": [2, 5], "take": [2, 5], "which": [2, 5], "serv": 2, "set": [2, 5], "each": [2, 5], "sm": [2, 3, 5], "": [2, 3], "also": [2, 3], "call": 2, "vocabulari": 2, "o": [2, 3], "next": [2, 5], "i_": 2, "s_t": 2, "mapsto": 2, "s_": 2, "t": [2, 3], "map": 2, "o_t": 2, "initi": [2, 3], "s0": 2, "It": [2, 5], "import": [2, 3], "getnextvalu": [2, 3, 5], "doe": 2, "chang": [2, 3], "word": [2, 3], "mutat": 2, "variabl": 2, "Its": 2, "pure": 2, "when": 2, "noth": [2, 3], "nearbi": 2, "should": [2, 3], "move": [2, 5], "straight": 2, "forward": [2, 5], "As": 2, "soon": 2, "reach": 2, "obstacl": 2, "front": [2, 5], "follow": [], "boundari": [], "keep": 2, "right": 2, "side": 2, "meter": 2, "video": 2, "slime": 2, "trail": 2, "mysmclass": 2, "startstat": [2, 3, 5], "inp": [2, 3, 5], "calcul": [2, 5], "base": [2, 5], "current": [2, 3, 5], "paramet": [2, 5], "The": [2, 5], "receiv": 2, "sensor": 2, "A": [2, 5], "tupl": [2, 5], "contain": [2, 5], "action": [2, 5], "type": [2, 5], "io": [2, 5], "algorithm": 2, "repres": 2, "left": 2, "defin": [2, 5], "fvel": 2, "veloc": [2, 5], "rvel": 2, "rotat": [2, 5], "distanc": [2, 5], "sonar": [2, 5], "detect": 2, "decis": 2, "front_dist": 2, "right_dist": 2, "left_dist": 2, "minimum": 2, "correspond": [2, 5], "behavior": 2, "determin": 2, "If": [2, 5], "wall": 2, "within": 2, "3m": [2, 5], "rang": 2, "go": 2, "less": [2, 5], "than": 2, "stop": [2, 5], "min": 2, "close": 2, "turn": 2, "space": 2, "farther": 2, "awai": 2, "binaryop": 2, "lazy_ev": 2, "env": 2, "evalu": 2, "lazi": 2, "express": 2, "given": [2, 5], "environ": 2, "ani": 2, "doesn": 2, "number": 2, "simpli": 2, "still": 2, "binari": 2, "eval": 2, "opstr": 2, "left_val": 2, "right_val": 2, "equival": 2, "sum": 2, "dict": 2, "int": 2, "float": 2, "true": [2, 5], "bool": 2, "option": 2, "whether": 2, "lazili": 2, "default": [2, 5], "op": 2, "prod": 2, "quot": 2, "assign": 2, "name": 2, "hand": 2, "unevalu": 2, "syntax": 2, "tree": 2, "made": 2, "alreadi": 2, "instanc": [2, 5], "otherwis": [2, 5], "num": 2, "tokenizelegaci": 2, "string": 2, "token": 2, "list": 2, "For": 2, "charect": 2, "check": 2, "sperat": 2, "need": 2, "case": 2, "like": 2, "hi": [2, 3], "33": 2, "777": 2, "charact": 2, "separ": 2, "substr": 2, "end": 2, "befor": 2, "extract": 2, "strip": 2, "lead": 2, "ensur": 2, "clean": 2, "addition": 2, "ad": 2, "updat": 2, "posit": [2, 5], "last": 2, "At": 2, "loop": 2, "equal": 2, "mean": [2, 3], "final": [2, 5], "onli": [2, 3, 5], "happn": 2, "eg": 2, "fred": 2, "georg": 2, "pars": 2, "arithmet": 2, "parsedexp": 2, "exampl": 2, "numbertok": 2, "variabletok": 2, "isnum": 2, "thing": 2, "calc": 2, "calctest": 2, "expr": 2, "testtoken": 2, "testpars": 2, "testev": 2, "testexpr": 2, "z": 2, "6": [2, 3, 5], "w": 2, "answer": 2, "var": 2, "testlazyev": 2, "lib601": 3, "doubl": 3, "delai": 3, "delay2machin": 3, "val0": 3, "val1": 3, "fix": 3, "runtestsdelai": 3, "print": 3, "test1": 3, "100": 3, "10": 3, "test2": 3, "test3": 3, "test": 3, "being": 3, "m": 3, "test4": 3, "step": [3, 5], "execut": 3, "carri": 3, "you": 3, "get": 3, "comment": 3, "x1": 3, "func": 3, "foo": 3, "x2": 3, "commentssm": 3, "do": [3, 5], "pass": 3, "runtestscomm": 3, "bar": 3, "e": 3, "l": 3, "first": [3, 5], "ho": 3, "writtent": 3, "nho": 3, "ha": 3, "firstwordsm": 3, "currrent": 3, "ahead": 3, "waot": 3, "new": 3, "line": 3, "char": 3, "runtestsfw": 3, "nfoo": 3, "h": 3, "section": 5, "equat": 5, "declar": 5, "tell": 5, "statement": 5, "about": 5, "what": 5, "block": 5, "diagram": 5, "imper": 5, "now": 5, "instead": 5, "sampl": 5, "work": 5, "obei": 5, "commut": 5, "multipl": 5, "distribut": 5, "addit": 5, "propot": 5, "both": 5, "movement": 5, "simultan": 5, "toward": 5, "robot": 5, "combin": 5, "smooth": 5, "motion": 5, "direct": 5, "goal": 5, "sequenti": 5, "gracefulli": 5, "danc": 5, "secret": 5, "messag": 5, "dynamicmovetopoint": 5, "swtch": 5, "fals": 5, "basic": 5, "choos": 5, "provid": 5, "item": 5, "util": 5, "second": 5, "sensorinput": 5, "On": 5, "one": 5, "singl": 5, "forwardgain": 5, "rotationgain": 5, "angleep": 5, "05": 5, "distep": 5, "02": 5, "rais": 5, "assertionerror": 5, "its": 5, "length": 5, "element": 5, "explain": 5, "error": 5, "desir": 5, "done": 5, "zero": 5, "stopsm": 5, "version": 5, "subclass": 5, "getnextst": 5, "assum": 5, "switchcondit": 5, "switch": 5, "pedestrian": 5, "unfortun": [6, 7, 8], "have": [6, 7, 8], "been": [6, 7, 8], "busi": [6, 7, 8], "so": [6, 7, 8], "complet": [6, 7, 8]}, "objects": {"boundaryBrain": [[2, 0, 1, "", "MySMClass"]], "boundaryBrain.MySMClass": [[2, 1, 1, "", "getNextValues"], [2, 2, 1, "", "startState"]], "": [[5, 3, 0, "-", "dynamicMoveToPoint"], [2, 3, 0, "-", "hw01Work"]], "dynamicMoveToPoint": [[5, 0, 1, "", "CombinedDynamicMoveToPoint"], [5, 4, 1, "", "DynamicMoveToPoint"], [5, 0, 1, "", "SequentialDynamicMoveToPoint"], [5, 0, 1, "", "StopSM"], [5, 4, 1, "", "switchCondition"]], "dynamicMoveToPoint.CombinedDynamicMoveToPoint": [[5, 2, 1, "", "angleEps"], [5, 2, 1, "", "distEps"], [5, 2, 1, "", "forwardGain"], [5, 1, 1, "", "getNextValues"], [5, 2, 1, "", "rotationGain"], [5, 2, 1, "", "startState"]], "dynamicMoveToPoint.SequentialDynamicMoveToPoint": [[5, 2, 1, "", "angleEps"], [5, 2, 1, "", "distEps"], [5, 2, 1, "", "forwardGain"], [5, 1, 1, "", "getNextValues"], [5, 2, 1, "", "rotationGain"], [5, 2, 1, "", "startState"]], "dynamicMoveToPoint.StopSM": [[5, 1, 1, "", "getNextValues"]], "hw01Work": [[2, 0, 1, "", "Assign"], [2, 0, 1, "", "BinaryOp"], [2, 0, 1, "", "Diff"], [2, 0, 1, "", "Number"], [2, 0, 1, "", "Prod"], [2, 0, 1, "", "Quot"], [2, 0, 1, "", "Sum"], [2, 0, 1, "", "Variable"], [2, 4, 1, "", "calc"], [2, 4, 1, "", "calcTest"], [2, 4, 1, "", "isNum"], [2, 4, 1, "", "numberTok"], [2, 4, 1, "", "parse"], [2, 4, 1, "", "testEval"], [2, 5, 1, "", "testExprs"], [2, 4, 1, "", "testLazyEval"], [2, 4, 1, "", "testParse"], [2, 4, 1, "", "testTokenize"], [2, 4, 1, "", "tokenize"], [2, 4, 1, "", "tokenizeLegacy"], [2, 4, 1, "", "variableTok"]], "hw01Work.Assign": [[2, 1, 1, "", "eval"], [2, 1, 1, "", "lazy_eval"], [2, 2, 1, "", "opStr"]], "hw01Work.BinaryOp": [[2, 1, 1, "", "eval"], [2, 1, 1, "", "lazy_eval"]], "hw01Work.Diff": [[2, 1, 1, "", "op"], [2, 2, 1, "", "opStr"]], "hw01Work.Number": [[2, 1, 1, "", "eval"]], "hw01Work.Prod": [[2, 1, 1, "", "op"], [2, 2, 1, "", "opStr"]], "hw01Work.Quot": [[2, 1, 1, "", "op"], [2, 2, 1, "", "opStr"]], "hw01Work.Sum": [[2, 1, 1, "", "op"], [2, 2, 1, "", "opStr"]], "hw01Work.Variable": [[2, 1, 1, "", "eval"], [2, 1, 1, "", "lazy_eval"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute", "3": "py:module", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "module", "Python module"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"welcom": 0, "mit": 0, "6": [0, 8], "01sc": 0, "introduct": 0, "To": 0, "electr": 0, "engin": [0, 2], "And": 0, "comput": 0, "scienc": 0, "i": [0, 5], "solut": 0, "content": [0, 4], "indic": 0, "tabl": [0, 4], "sourc": [1, 3], "code": [1, 3], "designlab01work": 1, "tl": [2, 5], "dr": [2, 5], "unit": [2, 4, 5, 6, 7, 8], "1": 2, "softwar": 2, "lectur": [2, 5, 6, 7, 8], "oop": 2, "handout": [2, 5], "read": [2, 5], "my": [2, 5], "note": [2, 5], "design": [2, 5, 8], "lab": [2, 5], "01": 2, "2": [2, 4, 5, 6, 7, 8], "state": 2, "machin": 2, "02": 2, "control": [2, 8], "robot": 2, "object": [2, 5], "transit": 2, "diagram": 2, "tutori": 2, "mazeworld": 2, "homework": 2, "swlab02work": 3, "signal": [4, 5, 6, 7, 8], "system": [4, 5, 6, 7, 8], "3": 5, "03": 5, "all": 5, "carrot": 5, "No": 5, "stick": 5, "hip": 5, "squar": 5, "combineddynamicmovetopoint": 5, "b": 5, "sequentialdynamicmovetopoint": 5, "5": [5, 7], "am": 5, "ballerina": 5, "4": 6, "lti": 6, "character": 7, "perform": 7, "follow": 2, "boundari": 2}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Welcome to MIT 6.01SC Introduction To Electrical Engineering And Computer Science I Solutions!": [[0, "welcome-to-mit-6-01sc-introduction-to-electrical-engineering-and-computer-science-i-solutions"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "Source code for designLab01Work": [[1, "source-code-for-designlab01work"]], "TL;DR": [[2, null], [5, null]], "Unit 1: Software Engineering": [[2, "unit-1-software-engineering"]], "Lecture 1 OOP": [[2, "lecture-1-oop"]], "Lecture Handout:": [[2, "lecture-handout"]], "Readings": [[2, "readings"], [5, "readings"]], "My Notes": [[2, "my-notes"], [2, "id2"], [5, "my-notes"]], "Design Lab 01": [[2, "design-lab-01"]], "Lecture 2 State Machines": [[2, "lecture-2-state-machines"]], "Lecture Handout": [[2, "id1"], [5, "lecture-handout"]], "Reading": [[2, "reading"]], "Software Lab 02": [[2, "software-lab-02"]], "Design Lab 02 (Controlling Robots)": [[2, "design-lab-02-controlling-robots"]], "Objective: Following Boundaries": [[2, "objective-following-boundaries"]], "State Transition Diagram": [[2, "state-transition-diagram"]], "Tutorial": [[2, "tutorial"]], "MazeWorld": [[2, "mazeworld"]], "Homework 01": [[2, "module-hw01Work"]], "Source code for swLab02Work": [[3, "source-code-for-swlab02work"]], "Unit 2 Signal and Systems": [[4, "unit-2-signal-and-systems"]], "Table of Contents": [[4, null]], "Unit 2: Signals and Systems": [[5, "unit-2-signals-and-systems"], [6, "unit-2-signals-and-systems"], [7, "unit-2-signals-and-systems"], [8, "unit-2-signals-and-systems"]], "Lecture 3 Signals and Systems": [[5, "lecture-3-signals-and-systems"]], "Design Lab 03 (All Carrot, No Stick)": [[5, "design-lab-03-all-carrot-no-stick"]], "Objective: Hip to be Square": [[5, "objective-hip-to-be-square"]], "a. CombinedDynamicMoveToPoint": [[5, "a-combineddynamicmovetopoint"]], "b. SequentialDynamicMoveToPoint": [[5, "b-sequentialdynamicmovetopoint"]], "Objective 5. I am a ballerina": [[5, "objective-5-i-am-a-ballerina"]], "\ud83e\udd72": [[6, null], [7, null], [8, null]], "Lecture 4 LTI Signals and Systems": [[6, "lecture-4-lti-signals-and-systems"]], "Lecture 5 Characterizing System Performance": [[7, "lecture-5-characterizing-system-performance"]], "Lecture 6 Designing Control Systems": [[8, "lecture-6-designing-control-systems"]]}, "indexentries": {"assign (class in hw01work)": [[2, "hw01Work.Assign"]], "binaryop (class in hw01work)": [[2, "hw01Work.BinaryOp"]], "diff (class in hw01work)": [[2, "hw01Work.Diff"]], "mysmclass (class in boundarybrain)": [[2, "boundaryBrain.MySMClass"]], "number (class in hw01work)": [[2, "hw01Work.Number"]], "prod (class in hw01work)": [[2, "hw01Work.Prod"]], "quot (class in hw01work)": [[2, "hw01Work.Quot"]], "sum (class in hw01work)": [[2, "hw01Work.Sum"]], "variable (class in hw01work)": [[2, "hw01Work.Variable"]], "calc() (in module hw01work)": [[2, "hw01Work.calc"]], "calctest() (in module hw01work)": [[2, "hw01Work.calcTest"]], "eval() (assign method)": [[2, "hw01Work.Assign.eval"]], "eval() (binaryop method)": [[2, "hw01Work.BinaryOp.eval"]], "eval() (number method)": [[2, "hw01Work.Number.eval"]], "eval() (variable method)": [[2, "hw01Work.Variable.eval"]], "getnextvalues() (mysmclass method)": [[2, "boundaryBrain.MySMClass.getNextValues"]], "hw01work": [[2, "module-hw01Work"]], "isnum() (in module hw01work)": [[2, "hw01Work.isNum"]], "lazy_eval() (assign method)": [[2, "hw01Work.Assign.lazy_eval"]], "lazy_eval() (binaryop method)": [[2, "hw01Work.BinaryOp.lazy_eval"]], "lazy_eval() (variable method)": [[2, "hw01Work.Variable.lazy_eval"]], "module": [[2, "module-hw01Work"], [5, "module-dynamicMoveToPoint"]], "numbertok() (in module hw01work)": [[2, "hw01Work.numberTok"]], "op() (diff method)": [[2, "hw01Work.Diff.op"]], "op() (prod method)": [[2, "hw01Work.Prod.op"]], "op() (quot method)": [[2, "hw01Work.Quot.op"]], "op() (sum method)": [[2, "hw01Work.Sum.op"]], "opstr (assign attribute)": [[2, "hw01Work.Assign.opStr"]], "opstr (diff attribute)": [[2, "hw01Work.Diff.opStr"]], "opstr (prod attribute)": [[2, "hw01Work.Prod.opStr"]], "opstr (quot attribute)": [[2, "hw01Work.Quot.opStr"]], "opstr (sum attribute)": [[2, "hw01Work.Sum.opStr"]], "parse() (in module hw01work)": [[2, "hw01Work.parse"]], "startstate (mysmclass attribute)": [[2, "boundaryBrain.MySMClass.startState"]], "testeval() (in module hw01work)": [[2, "hw01Work.testEval"]], "testexprs (in module hw01work)": [[2, "hw01Work.testExprs"]], "testlazyeval() (in module hw01work)": [[2, "hw01Work.testLazyEval"]], "testparse() (in module hw01work)": [[2, "hw01Work.testParse"]], "testtokenize() (in module hw01work)": [[2, "hw01Work.testTokenize"]], "tokenize() (in module hw01work)": [[2, "hw01Work.tokenize"]], "tokenizelegacy() (in module hw01work)": [[2, "hw01Work.tokenizeLegacy"]], "variabletok() (in module hw01work)": [[2, "hw01Work.variableTok"]], "combineddynamicmovetopoint (class in dynamicmovetopoint)": [[5, "dynamicMoveToPoint.CombinedDynamicMoveToPoint"]], "dynamicmovetopoint() (in module dynamicmovetopoint)": [[5, "dynamicMoveToPoint.DynamicMoveToPoint"]], "sequentialdynamicmovetopoint (class in dynamicmovetopoint)": [[5, "dynamicMoveToPoint.SequentialDynamicMoveToPoint"]], "stopsm (class in dynamicmovetopoint)": [[5, "dynamicMoveToPoint.StopSM"]], "angleeps (combineddynamicmovetopoint attribute)": [[5, "dynamicMoveToPoint.CombinedDynamicMoveToPoint.angleEps"]], "angleeps (sequentialdynamicmovetopoint attribute)": [[5, "dynamicMoveToPoint.SequentialDynamicMoveToPoint.angleEps"]], "disteps (combineddynamicmovetopoint attribute)": [[5, "dynamicMoveToPoint.CombinedDynamicMoveToPoint.distEps"]], "disteps (sequentialdynamicmovetopoint attribute)": [[5, "dynamicMoveToPoint.SequentialDynamicMoveToPoint.distEps"]], "dynamicmovetopoint": [[5, "module-dynamicMoveToPoint"]], "forwardgain (combineddynamicmovetopoint attribute)": [[5, "dynamicMoveToPoint.CombinedDynamicMoveToPoint.forwardGain"]], "forwardgain (sequentialdynamicmovetopoint attribute)": [[5, "dynamicMoveToPoint.SequentialDynamicMoveToPoint.forwardGain"]], "getnextvalues() (combineddynamicmovetopoint method)": [[5, "dynamicMoveToPoint.CombinedDynamicMoveToPoint.getNextValues"]], "getnextvalues() (sequentialdynamicmovetopoint method)": [[5, "dynamicMoveToPoint.SequentialDynamicMoveToPoint.getNextValues"]], "getnextvalues() (stopsm method)": [[5, "dynamicMoveToPoint.StopSM.getNextValues"]], "rotationgain (combineddynamicmovetopoint attribute)": [[5, "dynamicMoveToPoint.CombinedDynamicMoveToPoint.rotationGain"]], "rotationgain (sequentialdynamicmovetopoint attribute)": [[5, "dynamicMoveToPoint.SequentialDynamicMoveToPoint.rotationGain"]], "startstate (combineddynamicmovetopoint attribute)": [[5, "dynamicMoveToPoint.CombinedDynamicMoveToPoint.startState"]], "startstate (sequentialdynamicmovetopoint attribute)": [[5, "dynamicMoveToPoint.SequentialDynamicMoveToPoint.startState"]], "switchcondition() (in module dynamicmovetopoint)": [[5, "dynamicMoveToPoint.switchCondition"]]}})